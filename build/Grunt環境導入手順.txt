
Grunt環境導入手順

2013/12/22 20:55 - sato1043@gmail.com

＊＊＊

javascript 用のビルドツールとして Gruntを導入します。
導入先は普段使いの Windows PC のつもりでいます。

 PC: Windows7 64bit （32bitでも可）

今回の目標は構文チェックの実行ができるようになるところです。
(というか、javascriptに明るくないのでツールで補おうというわけです :）

以下の文では、PixivTagCollectorのREADMEファイルがあるディレクトリを
「プロジェクトルート」と呼ぶことにします。

[目次]
・概要
・Node.js インストール
・Grunt インストール
・Chrome へ Grunt 開発用エクステンションインストール
・grunt-devtools を実行



■ 概要

javascriptのプログラムは、notepadで書けばそればそれでいいのですが、
そのままではエラーチェックもないままデバッグすることになり若干の
わずらわしさがあります。
そこで開発上でおこなう作業のいくつかを自動化するためのツールを導入
しておきます。makeやantのようなものです。
自動化した作業の中にはjavascriptの構文チェックやファイルの結合・
難読化などを自動化できます。タスクはプラグイン式に提供されていて、
自分の必要なものを選択して導入⇒作業設定します。


■ Node.js インストール

Grunt は javascript の共通API（Common.js）として Node.js を使います。
ですのでまずはその導入からはじめます。

http://nodejs.jp/nodejs.org_ja/docs/v0.10/download/

今回は 0.10 を使用。
Windows Installer (.msi) 64-bitを使用してインストールします。
オプションはすべてデフォルトのままでした。


■ Grunt インストール

前提の node.js がインストールできたら、 Grunt 自体と
Grunt を Chrome から使うためのプラグインをインストールします。

エクスプローラでプロジェクトルート下 build　を開いて、「npm-install.cmd」をダブルクリック。

コマンドプロンプトが開いて、DLとインストールのログが表示され始めます。
package.json がその node.js の設定ファイルで、
その内容にしたがってモジュールを DL/インストールします。

最後、とくにエラーが出ていないように見て取れたら、なにかキーを押します。
コマンドプロンプトが閉じたら終わりです。


■ Chrome へ Grunt 開発用エクステンションインストール

Grunt は普通コマンドラインからしか使えないのですが、
GUIで使えたほうが便利なので Chrome から使えるようにします。

  Grunt Devtools extension for Chrome Developer Tools
  https://chrome.google.com/webstore/detail/grunt-devtools/fbiodiodggnlakggeeckkjccjhhjndnb?hl=en

Chromeで、 [右クリック]-[要素を検証]をクリック。Gruntタブが増えます。
この時はまだ、バッファロー?のアイコンが表示されるだけです。


■ grunt-devtools を実行

エクスプローラでプロジェクトルート下 build　を開いて、
「run-grunt-devtools.cmd」をダブルクリック。
コマンドプロンプトが開いたままになり、準備が出来たとメッセージされます。

-----
C:\xxx\PixivTagCollectorChrome\build>call grunt-devtools
Running "devtools" task
Warning: Native modules not compiled.  XOR performance will be degraded.
Warning: Native modules not compiled.  UTF-8 validation disabled.
>> Grunt Devtools v0.2.1 is ready! Proceed to the Chrome extension.
-----

Chromeで、 [右クリック]-[要素を検証]をクリック。Gruntタブを開きます。
今度は利用できる ALIAS TASKS 、TASKS が左、その右に OUTPUTペインがあります。

jshint をクリックしてください。

javascript が構文チェックされてその結果が表示されます。
jshint はすごく厳しいチェッカーです。エラーがないといいですね！

__END__